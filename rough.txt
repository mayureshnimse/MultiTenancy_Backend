const jwt = require('jsonwebtoken');
const { jwtSecret } = require('../config/auth');

const User = require('../models/User');
const Tenant = require('../models/Tenant');

function checkRole(allowedRoles) {
    return async (req, res, next) => {
        // Check if a JWT token is present in the request headers
        // const token = req.headers.authorization;
        const token = req.cookies.jwtToken;

        if (!token) {
            // If there's no token, send a message to log in as 'superadmin'
            return res.status(401).json({ message: 'Superadmin login required.' });
        }

        try {
            // Verify the JWT token
            const decoded = jwt.verify(token, jwtSecret);

            if (!decoded || !decoded.userId) {
                return res.status(401).json({ message: 'Invalid token.' });
            }
            if (decoded.isSuperadmin) {
                // Superadmin has immediate access
                return next();
            }

            // Check if the user's role is in the allowedRoles array
            const userId = decoded.userId;
            let user;
            if (allowedRoles.includes('tenant')) {
                user = await Tenant.findById(userId); // Fetch tenant data
            } else {
                user = await User.findById(userId); // Fetch user data
            }
            // const user = await User.findById(userId);

            if (!user) {
                return res.status(401).json({ message: 'User not found.' });
            }

            const userRole = user.role;

            if (allowedRoles.includes(userRole)) {
                // User has the required role, allow access to the route
                next();
            } else {
                // User doesn't have the required role, send a forbidden response
                res.status(403).json({ message: 'Access forbidden.Role must be superadmin' });
            }
        } catch (error) {
            console.error('Error checking role:', error);
            res.status(500).json({ message: 'Login is must' });
        }
    };
}

module.exports = checkRole;
